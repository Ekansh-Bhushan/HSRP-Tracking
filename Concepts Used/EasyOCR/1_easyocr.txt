EasyOCR is a Python library for Optical Character Recognition (OCR) that can be used to extract 
text from images and scanned documents. 
The "Reader" function in EasyOCR is one of the core components of the library, and it is used to 
perform text recognition tasks. 

Here's a step-by-step guide on how to use the Reader function in EasyOCR:
1. Install EasyOCR:
    Before you can use EasyOCR, you need to install it. 
    You can do this using pip:
    pip install easyocr
2. Import EasyOCR:
    Once EasyOCR is installed, you need to import it in your Python script:
    import easyocr
3. Initialize the Reader:
    Create an instance of the Reader class. 
    You can specify the language you want to use for text recognition. 
    EasyOCR supports various languages, and you can specify multiple languages if needed.
    reader = easyocr.Reader(['en'])  # Initialize with English language
4. Perform OCR on an Image:
    You can use the readtext() method of the Reader object to perform OCR on an image. 
    Pass the image path or a NumPy array representing the image to this method.
    image_path = 'image.png'
    results = reader.readtext(image_path)
    results will be a list of text regions detected in the image, along with the recognized text, 
    the location of the text, and other information.
5. Accessing OCR Results:
    The results variable contains the OCR output. 
    You can access different properties of each result, such as the text, the coordinates of the 
    bounding box, and the confidence score for the recognition:
    for (text, bbox, prob) in results:
        print(f"Text: {text}")
        print(f"BBox: {bbox}")
        print(f"Confidence: {prob}")
6. Advanced Options:
    EasyOCR provides several advanced options that you can use to customize recognition process. 
    Some common options include specifying text regions of interest (ROIs), adjusting the OCR 
    model and languages, and controlling the text size and font. 
    You can find more details about these options in the EasyOCR documentation.
7. Handling Exceptions:
    When using EasyOCR, it's important to handle exceptions that may occur. 
    For eg, you should handle exceptions related to image loading or OCR failures gracefully.



Make sure to adjust the language and other settings based on your specific use case. 
EasyOCR is a powerful library for text recognition, and you can fine-tune it for different 
languages and applications.